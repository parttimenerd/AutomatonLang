package automation.lang.editor.panel;

/**
 * Klasse die als GUI für die Suchmaske fungiert
 * 
 * @author Johannes Bechberger
 */
public class FindFrame extends javax.swing.JFrame {

    /** Creates new form FindFrame */
    public FindFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        suchbegriff_feld = new javax.swing.JTextField();
        next_button = new javax.swing.JButton();

        setTitle("Suchen");
        setAlwaysOnTop(true);
        setResizable(false);

        suchbegriff_feld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                suchbegriff_feldKeyReleased(evt);
            }
        });

        next_button.setText(">");
        next_button.setFocusCycleRoot(true);
        next_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(suchbegriff_feld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(next_button))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(suchbegriff_feld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(next_button))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void next_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_buttonActionPerformed
        next_listener.actionPerformed();
}//GEN-LAST:event_next_buttonActionPerformed

    private void suchbegriff_feldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_suchbegriff_feldKeyReleased
        if (suchbegriff_feld.getText().matches("(Suchbegriff)+"))
            suchbegriff_feld.setText(evt.getKeyChar() + "");
        suchen_listener.actionPerformed(new SuchenEvent(suchbegriff_feld.getText()));
    }//GEN-LAST:event_suchbegriff_feldKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton next_button;
    private javax.swing.JTextField suchbegriff_feld;
    // End of variables declaration//GEN-END:variables

    /**
     * @param suchen_listener the suchen_listener to set
     */
    public void setSuchen_listener(SuchenListener suchen_listener) {
        this.suchen_listener = suchen_listener;
    }

    void setText(String text) {
        suchbegriff_feld.setText(text);
    }

    /**
     * @param next_listener the next_listener to set
     */
    public void setNext_listener(NextListener next_listener) {
        this.next_listener = next_listener;
    }

    /**
     * Suchen Listener
     */
    public abstract static class SuchenListener {

        /**
         * Methode die aufgerufen wird wenn der Benutzer ein Suchwort eintippt
         * @param evt Event
         */
        public abstract void actionPerformed(SuchenEvent evt);
    }

    /**
     * Suchen Event
     */
    public static class SuchenEvent {

        private String suchwort;

        /**
         * Konstruktor dieser Klasse
         * @param suchwort Suchwort
         */
        public SuchenEvent(String suchwort) {
            this.suchwort = suchwort;
        }

        /**
         * Gibt das Suchwort zurück
         * @return Suchwort
         */
        public String getSuchwort(){
            return suchwort;
        }
    }

    /**
     * Nächste Suche Listener
     */
    public abstract static class NextListener {
        
        /**
         * Methode, die aufgerufen wird, wenn der Benutzer weitersuchen möchte
         */
        public abstract void actionPerformed();
    }
    
    private NextListener next_listener;
    private SuchenListener suchen_listener;
}
